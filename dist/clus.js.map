{"version":3,"file":null,"sources":["../src/core/init.js","../src/core/extend.js","../src/core/core.js","../src/core/global.js","../src/core/instance.js","../src/core/event.js","../src/core/search.js","../src/core/dom.js"],"sourcesContent":["//\n// initialize\n//\n\nexport default function init(selector = '') {\n    let dom,\n        fragmentRE = /^\\s*<(\\w+|!)[^>]*>/,\n        selectorType = Clus.type(selector),\n        elementTypes = [1, 9, 11];\n\n    if (!selector) {\n        dom = [],\n        dom.selector = selector;\n    } else if (elementTypes.indexOf(selector.nodeType) !== -1 || selector === window) {\n        dom = [selector],\n        selector = null;\n    } else if (selectorType === 'function') {\n        return Clus(document).ready(selector);\n    } else if (selectorType === 'array') {\n        dom = selector;\n    } else if (selectorType === 'object') {\n        dom = [selector],\n        selector = null;\n    } else if (selectorType === 'string') {\n        if (selector[0] === '<' && fragmentRE.test(selector)) {\n            dom = Clus.parseHTML(selector),\n            selector = null;\n        } else {\n            dom = [].slice.call(document.querySelectorAll(selector));\n        }\n    }\n\n    dom = dom || [];\n    Clus.extend(dom, Clus.fn);\n    dom.selector = selector;\n\n    return dom;\n}\n","//\n// extend\n//\n\nexport default function extend() {\n    let options, name, clone, copy, source, copyIsArray,\n        target = arguments[0] || {},\n        i = 1,\n        length = arguments.length,\n        deep = false;\n\n    if (typeof target === 'boolean') {\n        deep = target;\n        target = arguments[i] || {};\n        i++;\n    }\n\n    if (typeof target !== 'object' && Clus.type(target) !== 'function') {\n        target = {};\n    }\n\n    if (i === length) {\n        target = this;\n        i--;\n    }\n\n    for (; i < length; i++) {\n        //\n        if ((options = arguments[i]) !== null) {\n            // for in source object\n            for (name in options) {\n\n                source = target[name];\n                copy = options[name];\n\n                if (target == copy) {\n                    continue;\n                }\n\n                // deep clone\n                if (deep && copy && (Clus.isPlainObject(copy) || (copyIsArray = Array.isArray(copy)))) {\n                    // if copy is array\n                    if (copyIsArray) {\n                        copyIsArray = false;\n                        // if is not array, set it to array\n                        clone = source && Array.isArray(source) ? source : [];\n                    } else {\n                        // if copy is not a object, set it to object\n                        clone = source && Clus.isPlainObject(source) ? source : {};\n                    }\n\n                    target[name] = extend(deep, clone, copy);\n                } else if (copy !== undefined) {\n                    target[name] = copy;\n                }\n            }\n        }\n    }\n\n    return target;\n}\n","//\n// core\n//\n\nimport init from './init';\nimport extend from './extend';\n\nexport default function Clus (selector) {\n    return new Clus.fn.init(selector);\n}\n\nClus.fn = Clus.prototype = {\n    contructor: Clus,\n    init,\n};\n\nClus.fn.init.prototype = Clus.fn;\n\nClus.extend = Clus.fn.extend = extend;\n\nwindow.Clus = window.C = window.$ = Clus;\n","//\n// global methods\n//\n\nexport function rootQuery(selector) {\n    return document.querySelectorAll(selector);\n}\n\nexport function trim(text) {\n    const rtrim = /^[\\s\\uFEFF\\xA0]+|[\\s\\uFEFF\\xA0]+$/g;\n    return text == null ? '' : `${text}`.replace(rtrim, '');\n}\n\nexport function type(object) {\n    let class2type = {},\n        type = class2type.toString.call(object),\n        typeString = 'Boolean Number String Function Array Date RegExp Object Error Symbol';\n\n    if (object == null) {\n        return object + '';\n    }\n\n    typeString.split(' ').forEach((type) => {\n        class2type[`[object ${type}]`] = type.toLowerCase();\n    });\n\n    return (\n        typeof object === 'object' ||\n        typeof object === 'function'\n        ?\n        class2type[type] || 'object'\n        :\n        typeof object\n    );\n}\n\nexport function isPlainObject(object) {\n    let proto,\n        ctor,\n        class2type = {},\n        toString = class2type.toString, // Object.prototype.toString\n        hasOwn = class2type.hasOwnProperty,\n        fnToString = hasOwn.toString, // Object.toString/Function.toString\n        ObjectFunctionString = fnToString.call( Object ); // 'function Object() { [native code] }'\n\n    if (!object || toString.call(object) !== '[object Object]') {\n        return false;\n    }\n\n    // According to the object created by `Object.create(null)` is no `prototype`\n    proto = Object.getPrototypeOf(object);\n    if (!proto) {\n        return true;\n    }\n\n    ctor = hasOwn.call(proto, 'constructor') && proto.constructor;\n    return typeof ctor === 'function' && fnToString.call( ctor ) === ObjectFunctionString;\n}\n\nexport function isWindow(object) {\n    return object !== null && object === object.window;\n}\n\nexport function isArrayLike(object) {\n    let len = !!object && 'length' in object && object.length,\n\t\ttype = Clus.type(object);\n\n\tif (type === 'function' || isWindow(object)) return false;\n\n\treturn type === 'array' || len === 0 || typeof length === 'number' && len > 0 && (len - 1) in object;\n}\n\nexport function flatten(array) {\n    let ret = [],\n        el,\n        i = 0,\n        len = array.length;\n\n    for (; i < len; i++) {\n        el = array[i];\n        if (Array.isArray(el)) {\n            ret.push.apply(ret, flatten(el));\n        } else {\n            ret.push(el);\n        }\n    }\n    return ret;\n}\n\nexport function map(items, callback) {\n    let value, values = [], len, i = 0;\n\n\tif (isArrayLike(items)) {\n\t\tlen = items.length;\n\t\tfor (; i < len; i++) {\n            value = callback(items[i], i);\n            if (value != null) values.push(value);\n\t\t}\n\t} else {\n\t\tfor (i in items) {\n            value = callback(items[i], i);\n            if (value != null) values.push(value);\n\t\t}\n\t}\n\n\treturn flatten(values);\n}\n\nexport function each(items, callback) {\n    let len, i = 0;\n\n\tif ( isArrayLike(items) ) {\n\t\tlen = items.length;\n\t\tfor ( ; i < len; i++ ) {\n\t\t\tif (callback.call(items[i], i, items[i]) === false) return items;\n\t\t}\n\t} else {\n\t\tfor ( i in items ) {\n            if (callback.call(items[i], i, items[i]) === false) return items;\n\t\t}\n\t}\n\n\treturn items;\n}\n\nexport function merge(first, second) {\n    let len = +second.length,\n\t\tj = 0,\n\t\ti = first.length;\n\n\tfor ( ; j < len; j++ ) {\n\t\tfirst[ i++ ] = second[ j ];\n\t}\n\n\tfirst.length = i;\n\n\treturn first;\n}\n\nexport function unique(array) {\n    let unique = [], i = 0, len = array.length;\n    for (; i < len; i++) {\n        if (unique.indexOf(array[i]) === -1) {\n            unique.push(array[i]);\n        }\n    }\n    return unique;\n}\n\nexport function matches(element, selector) {\n    if (!selector || !element || element.nodeType !== 1) return false;\n\n    let matchesSelector = element.matchesSelector || element.webkitMatchesSelector || element.mozMatchesSelector || element.msMatchesSelector;\n\n    return matchesSelector.call(element, selector);\n}\n\nexport function parseHTML(DOMString) {\n    let htmlDoc = document.implementation.createHTMLDocument();\n    htmlDoc.body.innerHTML = DOMString;\n    return htmlDoc.body.children;\n}\n\nClus.extend({\n    find: rootQuery,\n    type,\n    isPlainObject,\n    isWindow,\n    isArrayLike,\n    each,\n    map,\n    merge,\n    trim,\n    unique,\n    matches,\n    parseHTML,\n});\n","//\n// instance methods\n//\n\nexport function is(selector) {\n    return this.length > 0 && Clus.matches(this[0], selector);\n}\n\nClus.fn.extend({\n    is,\n});\n","//\n// event\n//\n\nexport function on(eventName, selector, handler, capture) {\n    let events = eventName.split(' '), i, j;\n\n    for (i = 0; i < this.length; i++) {\n        if (Clus.type(selector) === 'function' || selector === false) {\n            // Usual events\n            if (Clus.type(selector) === 'function') {\n                handler = arguments[1];\n                capture = arguments[2] || false;\n            }\n            for (j = 0; j < events.length; j++) {\n                // check for namespaces\n                if (events[j].indexOf('.') !== -1) {\n                    handleNamespaces(this[i], events[j], handler, capture);\n                } else {\n                    this[i].addEventListener(events[j], handler, capture);\n                }\n            }\n        } else {\n            // Live events\n            for (j = 0; j < events.length; j++) {\n                if (!this[i].DomLiveListeners) {\n                    this[i].DomLiveListeners = [];\n                }\n\n                this[i].DomLiveListeners.push({\n                    handler: handler,\n                    liveListener: handleLiveEvent,\n                });\n\n                if (events[j].indexOf('.') !== -1) {\n                    handleNamespaces(this[i], events[j], handleLiveEvent, capture);\n                } else {\n                    this[i].addEventListener(events[j], handleLiveEvent, capture);\n                }\n            }\n        }\n    }\n\n    function handleLiveEvent(event) {\n        let k,\n            parents,\n            target = event.target;\n\n        if (Clus(target).is(selector)) {\n            handler.call(target, event);\n        } else {\n            parents = Clus(target).parents();\n            for (k = 0; k < parents.length; k++) {\n                if (Clus(parents[k]).is(selector)) {\n                    handler.call(parents[k], event);\n                }\n            }\n        }\n    }\n\n    function handleNamespaces(elm, name, handler, capture) {\n        let namespace = name.split('.');\n\n        if (!elm.DomNameSpaces) {\n            elm.DomNameSpaces = [];\n        }\n\n        elm.DomNameSpaces.push({\n            namespace: namespace[1],\n            event: namespace[0],\n            handler: handler,\n            capture: capture,\n        });\n\n        elm.addEventListener(namespace[0], handler, capture);\n    }\n\n    return this;\n}\n\nexport function off(eventName, selector, handler, capture) {\n    let events,\n        i, j, k,\n        that = this;\n\n    events = eventName.split(' ');\n\n    for (i = 0; i < events.length; i++) {\n        for (j = 0; j < this.length; j++) {\n            if (Clus.type(selector) === 'function' || selector === false) {\n                // Usual events\n                if (Clus.type(selector) === 'function') {\n                    handler = arguments[1];\n                    capture = arguments[2] || false;\n                }\n\n                if (events[i].indexOf('.') === 0) { // remove namespace events\n                    removeEvents(events[i].substr(1), handler, capture);\n                } else {\n                    this[j].removeEventListener(events[i], handler, capture);\n                }\n            } else {\n                // Live event\n                if (this[j].DomLiveListeners) {\n                    for (k = 0; k < this[j].DomLiveListeners.length; k++) {\n                        if (this[j].DomLiveListeners[k].handler === handler) {\n                            this[j].removeEventListener(events[i], this[j].DomLiveListeners[k].liveListener, capture);\n                        }\n                    }\n                }\n                if (this[j].DomNameSpaces && this[j].DomNameSpaces.length && events[i]) {\n                    removeEvents(events[i]);\n                }\n            }\n        }\n    }\n\n    function removeEvents(event) {\n        let i, j,\n            item,\n            parts = event.split('.'),\n            name = parts[0],\n            ns = parts[1];\n\n        for (i = 0; i < that.length; ++i) {\n            if (that[i].DomNameSpaces) {\n                for (j = 0; j < that[i].DomNameSpaces.length; ++j) {\n                    item = that[i].DomNameSpaces[j];\n\n                    if (item.namespace == ns && (item.event == name || !name)) {\n                        that[i].removeEventListener(item.event, item.handler, item.capture);\n                        item.removed = true;\n                    }\n                }\n                // remove the events from the DomNameSpaces array\n                for (j = that[i].DomNameSpaces.length - 1; j >= 0; --j) {\n                    if (that[i].DomNameSpaces[j].removed) {\n                        that[i].DomNameSpaces.splice(j, 1);\n                    }\n                }\n            }\n        }\n    }\n\n    return this;\n}\n\nClus.fn.extend({\n    on,\n    off,\n});\n","//\n// dom search\n//\n\nfunction pushStack(els) {\n    let ret = Clus.merge(this.contructor(), els);\n    ret.prevObject = this;\n    return ret;\n}\n\nfunction find(selector) {\n    let i = 0,\n        el,\n        ret = this.pushStack([]);\n\n    while((el = this[i++])) {\n        ret = Clus.merge(ret, el.querySelectorAll(selector));\n    }\n\n    return ret;\n}\n\nfunction end() {\n    return this.prevObject || this.contructor();\n}\n\nfunction eq(i) {\n    let len = this.length,\n        j = +i + ( i < 0 ? len : 0 ); // reverse find\n    return this.pushStack(j >= 0 && j < len ? [this[j]] : []);\n}\n\nfunction first() {\n    return this.eq(0);\n}\n\nfunction last() {\n    return this.eq(-1);\n}\n\nfunction parent(selector) {\n    let parents = [], i = 0, len = this.length;\n    for (; i < len; i++) {\n        if (this[i].parentNode !== null) {\n            if (selector) {\n                if (Clus(this[i].parentNode).is(selector)) {\n                    parents.push(this[i].parentNode);\n                }\n            } else {\n                parents.push(this[i].parentNode);\n            }\n        }\n    }\n    parents = Clus.unique(parents);\n    return Clus(parents);\n}\n\nfunction parents(selector) {\n    let parent, parents = [], i = 0, len = this.length;\n    for (; i < len; i++) {\n        parent = this[i].parentNode;\n        while (parent) {\n            if (selector) {\n                if (Clus(parent).is(selector)) {\n                    parents.push(parent);\n                }\n            } else {\n                parents.push(parent);\n            }\n            parent = parent.parentNode;\n        }\n    }\n    parents = Clus.unique(parents);\n    return Clus(parents);\n}\n\nClus.fn.extend({\n    pushStack,\n    find,\n    end,\n    eq,\n    first,\n    last,\n    parent,\n    parents,\n});\n","//\n// dom\n//\n\nconst rnotwhite = /\\S+/g;\nconst rclass = /[\\t\\r\\n\\f]/g;\n\nexport function ready(callback) {\n    if (\n        document\n        &&\n        /complete|loaded|interactive/.test(document.readyState)\n        &&\n        document.body\n    ) {\n        callback();\n    } else {\n        document.addEventListener('DOMContentLoaded', function () {\n            callback();\n        }, false);\n    }\n\n    return this;\n}\n\nexport function getClass(el) {\n    return el.getAttribute && el.getAttribute('class') || '';\n}\n\nexport function addClass(cls) {\n    let classes, clazz, el, cur, curValue, finalValue, j, i = 0;\n\n    if (typeof cls === 'string' && cls) {\n        classes = cls.match(rnotwhite) || [];\n\n        while((el = this[i++])) {\n            curValue = getClass(el);\n            cur = (el.nodeType === 1) && ` ${curValue} `.replace(rclass, ' ');\n\n            if (cur) {\n                j = 0;\n\n                while((clazz = classes[j++])) {\n                    // to determine whether the class that to add has already existed\n                    if (cur.indexOf(` ${clazz} `) == -1) {\n                        cur += clazz + ' ';\n                    }\n                    finalValue = Clus.trim(cur);\n                    if ( curValue !== finalValue ) {\n                        el.setAttribute('class', finalValue);\n                    }\n                }\n            }\n        }\n    }\n\n    return this;\n}\n\nexport function removeClass(cls) {\n    let classes, clazz, el, cur, curValue, finalValue, j, i = 0;\n\n    if (!arguments.length) {\n        return;\n    }\n\n    if (typeof cls === 'string' && cls) {\n        classes = cls.match(rnotwhite) || [];\n\n        while((el = this[i++])) {\n            curValue = getClass(el);\n            cur = (el.nodeType === 1) && ` ${curValue} `.replace(rclass, ' ');\n\n            if (cur) {\n                j = 0;\n\n                while((clazz = classes[j++])) {\n                    // to determine whether the class that to add has already existed\n                    if (cur.indexOf(` ${clazz} `) !== -1) {\n                        cur = cur.replace(` ${clazz} `, ' ');\n                    }\n                    finalValue = Clus.trim(cur);\n                    if ( curValue !== finalValue ) {\n                        el.setAttribute('class', finalValue);\n                    }\n                }\n            }\n        }\n    }\n\n    return this;\n}\n\nexport function hasClass(cls) {\n    let el, i = 0, className = ` ${cls} `;\n\n    while((el = this[i++])) {\n        if (\n            el.nodeType === 1\n            &&\n            ` ${getClass(el)} `.replace(rclass, ' ').indexOf(className) !== -1\n        ) {\n            return true;\n        }\n    }\n\n    return false;\n}\n\nexport function toggleClass(cls) {\n    let el, i = 0;\n\n    while((el = this[i++])) {\n        if (this.hasClass(cls)) {\n            this.removeClass(cls);\n            return this;\n        } else {\n            this.addClass(cls);\n            return this;\n        }\n    }\n}\n\nexport function append(DOMString) {\n    let el, i = 0,\n        fregmentCollection = Clus.parseHTML(DOMString),\n        fregments = Array.prototype.slice.apply(fregmentCollection);\n\n    while((el = this[i++])) {\n        fregments.map(fregment => {\n            el.appendChild(fregment);\n        });\n    }\n\n    return this;\n}\n\nexport function appendTo(selector) {\n    let fregment, i = 0,\n        elCollection = Clus.find(selector),\n        els = Array.prototype.slice.apply(elCollection);\n\n    while((fregment = this[i++])) {\n        els.map(el => {\n            el.appendChild(fregment);\n        });\n    }\n}\n\nClus.fn.extend({\n    ready,\n    addClass,\n    removeClass,\n    hasClass,\n    toggleClass,\n    append,\n    appendTo,\n});\n"],"names":["Clus"],"mappings":"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"}