{"version":3,"file":null,"sources":["../src/core/utils.js","../src/core/extend.js","../src/core/dom.js","../src/core/core.js","../src/core/init.js","../src/index.js"],"sourcesContent":["//\n// utils.js\n//\n\nexport function find(selector) {\n    return document.querySelectorAll(selector);\n}\n\nexport function trim(text) {\n    const rtrim = /^[\\s\\uFEFF\\xA0]+|[\\s\\uFEFF\\xA0]+$/g;\n    return text == null ? '' : `${text}`.replace(rtrim, '');\n}\n\nexport function type(object) {\n    let class2type = {},\n        type = class2type.toString.call(object),\n        typeString = 'Boolean Number String Function Array Date RegExp Object Error Symbol';\n\n    if (object == null) {\n        return object + '';\n    }\n\n    typeString.split(' ').forEach((type) => {\n        class2type[`[object ${type}]`] = type.toLowerCase();\n    });\n\n    return (\n        typeof object === 'object' ||\n        typeof object === 'function'\n        ?\n        class2type[type] || 'object'\n        :\n        typeof object\n    );\n}\n\nexport function isPlainObject(object) {\n    let proto,\n        ctor,\n        class2type = {},\n        toString = class2type.toString, // Object.prototype.toString\n        hasOwn = class2type.hasOwnProperty,\n        fnToString = hasOwn.toString, // Object.toString/Function.toString\n        ObjectFunctionString = fnToString.call( Object ); // 'function Object() { [native code] }'\n\n    if (!object || toString.call(object) !== '[object Object]') {\n        return false;\n    }\n\n    // According to the object created by `Object.create(null)` is no `prototype`\n    proto = Object.getPrototypeOf(object);\n    if (!proto) {\n        return true;\n    }\n\n    ctor = hasOwn.call(proto, 'constructor') && proto.constructor;\n    return typeof ctor === 'function' && fnToString.call( ctor ) === ObjectFunctionString;\n}\n\nexport function merge(first, second) {\n    let length = +second.length,\n\t\tj = 0,\n\t\ti = first.length;\n\n\tfor ( ; j < length; j++ ) {\n\t\tfirst[ i++ ] = second[ j ];\n\t}\n\n\tfirst.length = i;\n\n\treturn first;\n}\n","//\n// extend.js\n//\n\nimport { isPlainObject, type } from './utils.js';\n\nexport default function extend() {\n    let options, name, clone, copy, source, copyIsArray,\n        target = arguments[0] || {},\n        i = 1,\n        length = arguments.length,\n        deep = false;\n\n    if (typeof target === 'boolean') {\n        deep = target;\n        target = arguments[i] || {};\n        i++;\n    }\n\n    if (typeof target !== 'object' && type(target) !== 'function') {\n        target = {};\n    }\n\n    if (i === length) {\n        target = this;\n        i--;\n    }\n\n    for (; i < length; i++) {\n        //\n        if ((options = arguments[i]) !== null) {\n            // for in source object\n            for (name in options) {\n\n                source = target[name];\n                copy = options[name];\n\n                if (target == copy) {\n                    continue;\n                }\n\n                // deep clone\n                if (deep && copy && (isPlainObject(copy) || (copyIsArray = Array.isArray(copy)))) {\n                    // if copy is array\n                    if (copyIsArray) {\n                        copyIsArray = false;\n                        // if is not array, set it to array\n                        clone = source && Array.isArray(source) ? source : [];\n                    } else {\n                        // if copy is not a object, set it to object\n                        clone = source && isPlainObject(source) ? source : {};\n                    }\n\n                    target[name] = extend(deep, clone, copy);\n                } else if (copy !== undefined) {\n                    target[name] = copy;\n                }\n            }\n        }\n    }\n\n    return target;\n}\n","//\n// classes.js\n//\n\nconst rnotwhite = /\\S+/g;\nconst rclass = /[\\t\\r\\n\\f]/g;\n\nfunction getClass(el) {\n    return el.getAttribute && el.getAttribute('class') || '';\n}\n\nexport default {\n    addClass: function addClass(cls) {\n        let classes, clazz, el, cur, curValue, finalValue, j, i = 0;\n\n        if (typeof cls === 'string' && cls) {\n            classes = cls.match(rnotwhite) || [];\n\n            while((el = this[i++])) {\n                curValue = getClass(el);\n                cur = (el.nodeType === 1) && ` ${curValue} `.replace(rclass, ' ');\n\n                if (cur) {\n                    j = 0;\n\n                    while((clazz = classes[j++])) {\n                        // to determine whether the class that to add has already existed\n                        if (cur.indexOf(` ${clazz} `) == -1) {\n                            cur += clazz + ' ';\n                        }\n                        finalValue = Clus.trim(cur);\n                        if ( curValue !== finalValue ) {\n                            el.setAttribute('class', finalValue);\n                        }\n                    }\n                }\n            }\n        }\n\n        return this;\n    },\n    removeClass: function removeClass(cls) {\n        let classes, clazz, el, cur, curValue, finalValue, j, i = 0;\n\n        if (!arguments.length) {\n            return;\n        }\n\n        if (typeof cls === 'string' && cls) {\n            classes = cls.match(rnotwhite) || [];\n\n            while((el = this[i++])) {\n                curValue = getClass(el);\n                cur = (el.nodeType === 1) && ` ${curValue} `.replace(rclass, ' ');\n\n                if (cur) {\n                    j = 0;\n\n                    while((clazz = classes[j++])) {\n                        // to determine whether the class that to add has already existed\n                        if (cur.indexOf(` ${clazz} `) !== -1) {\n                            cur = cur.replace(` ${clazz} `, ' ');\n                        }\n                        finalValue = Clus.trim(cur);\n                        if ( curValue !== finalValue ) {\n                            el.setAttribute('class', finalValue);\n                        }\n                    }\n                }\n            }\n        }\n\n        return this;\n    },\n    hasClass: function hasClass(cls) {\n        let el, i = 0, className = ` ${cls} `;\n\n        while((el = this[i++])) {\n            if (\n                el.nodeType === 1\n                &&\n                ` ${getClass(el)} `.replace(rclass, ' ').indexOf(className) !== -1\n            ) {\n                return true;\n            }\n        }\n\n        return false;\n    },\n    toggleClass: function toggleClass(cls) {\n        let el, i = 0;\n\n        while((el = this[i++])) {\n            if (this.hasClass(cls)) {\n                this.removeClass(cls);\n                return this;\n            } else {\n                this.addClass(cls);\n                return this;\n            }\n        }\n    },\n};\n","//\n// Core.js\n//\n\nimport extend from './extend.js';\nimport { find, merge, trim } from './utils.js';\nimport DOM from './dom.js';\n\nexport default function Clus(selector, context) {\n    return new Clus.fn.init(selector, context);\n}\n\nClus.fn = Clus.prototype = {\n    contructor: Clus,\n    length: 0,\n};\n\nClus.extend = Clus.fn.extend = extend;\n\nClus.extend({\n    find,\n    merge,\n    trim,\n});\n\n// ============\n// extend selector\n// ============\n\nClus.fn.extend({\n    pushStack: function (els) {\n        let ret = merge(this.contructor(), els);\n        ret.prevObject = this;\n        return ret;\n    },\n    find: function (selector) {\n        let i = 0,\n            len = this.length,\n            self = this,\n            ret = this.pushStack([]);\n\n        for (; i < len; i++) {\n            Clus.find(selector, self[ i ], ret);\n        }\n\n        return ret;\n    },\n    end: function end() {\n        return this.prevObject || this.constructor();\n    },\n    eq: function eq(i) {\n        let len = this.length,\n            j = +i + ( i < 0 ? len : 0 ); // reverse find\n        return this.pushStack(j >= 0 && j < len ? [this[j]] : []);\n    },\n    first: function first() {\n        return this.eq(0);\n    },\n    last: function last() {\n        return this.eq(-1);\n    },\n});\n\n// ============\n// extend DOM methods\n// ============\nClus.fn.extend(DOM);\n\nwindow.Clus = window.C = window.$$ = Clus;\n","//\n// init.js\n//\n\nexport default function init(Clus) {\n    Clus.fn.init = function (selector, context, root) {\n        if (!selector) {\n            return;\n        } else {\n            let els = Clus.find(selector);\n            if (els.length) {\n                Clus.merge(this, els);\n            }\n            return this;\n        }\n    };\n    Clus.fn.init.prototype = Clus.fn;\n}\n","// @flow\n\nimport Clus from './core/core.js';\nimport init from './core/init.js';\n\ninit(Clus);\n"],"names":["find","selector","document","querySelectorAll","trim","text","rtrim","replace","type","object","class2type","toString","call","typeString","split","forEach","toLowerCase","isPlainObject","proto","ctor","hasOwnProperty","fnToString","hasOwn","Object","getPrototypeOf","constructor","ObjectFunctionString","merge","first","second","length","j","i","extend","options","name","clone","copy","source","copyIsArray","target","arguments","deep","this","Array","isArray","undefined","getClass","el","getAttribute","Clus","context","fn","init","root","els","prototype","rnotwhite","rclass","cls","classes","clazz","cur","curValue","finalValue","match","nodeType","indexOf","setAttribute","className","hasClass","removeClass","addClass","ret","contructor","prevObject","len","self","pushStack","eq","DOM","window","C","$$"],"mappings":"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"}