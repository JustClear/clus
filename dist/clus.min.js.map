{"version":3,"file":null,"sources":["../src/core/init.js","../src/core/extend.js","../src/core/core.js","../src/global.js","../src/instance.js","../src/event.js","../src/search.js","../src/dom.js"],"sourcesContent":["//\n// initialize\n//\n\nexport default function init(selector = '') {\n    let dom,\n        fragmentRE = /^\\s*<(\\w+|!)[^>]*>/,\n        selectorType = Clus.type(selector),\n        elementTypes = [1, 9, 11];\n\n    if (!selector) {\n        dom = [],\n        dom.selector = selector;\n    } else if (elementTypes.indexOf(selector.nodeType) !== -1 || selector === window) {\n        dom = [selector],\n        selector = null;\n    } else if (selectorType === 'function') {\n        return Clus(document).ready(selector);\n    } else if (selectorType === 'array') {\n        dom = selector;\n    } else if (selectorType === 'object') {\n        dom = [selector],\n        selector = null;\n    } else if (selectorType === 'string') {\n        if (selector[0] === '<' && fragmentRE.test(selector)) {\n            dom = Clus.parseHTML(selector),\n            selector = null;\n        } else {\n            dom = [].slice.call(document.querySelectorAll(selector));\n        }\n    }\n\n    dom = dom || [];\n    Clus.extend(dom, Clus.fn);\n    dom.selector = selector;\n\n    return dom;\n}\n","//\n// extend\n//\n\nexport default function extend() {\n    let options, name, clone, copy, source, copyIsArray,\n        target = arguments[0] || {},\n        i = 1,\n        length = arguments.length,\n        deep = false;\n\n    if (typeof target === 'boolean') {\n        deep = target;\n        target = arguments[i] || {};\n        i++;\n    }\n\n    if (typeof target !== 'object' && Clus.type(target) !== 'function') {\n        target = {};\n    }\n\n    if (i === length) {\n        target = this;\n        i--;\n    }\n\n    for (; i < length; i++) {\n        //\n        if ((options = arguments[i]) !== null) {\n            // for in source object\n            for (name in options) {\n\n                source = target[name];\n                copy = options[name];\n\n                if (target == copy) {\n                    continue;\n                }\n\n                // deep clone\n                if (deep && copy && (Clus.isPlainObject(copy) || (copyIsArray = Array.isArray(copy)))) {\n                    // if copy is array\n                    if (copyIsArray) {\n                        copyIsArray = false;\n                        // if is not array, set it to array\n                        clone = source && Array.isArray(source) ? source : [];\n                    } else {\n                        // if copy is not a object, set it to object\n                        clone = source && Clus.isPlainObject(source) ? source : {};\n                    }\n\n                    target[name] = extend(deep, clone, copy);\n                } else if (copy !== undefined) {\n                    target[name] = copy;\n                }\n            }\n        }\n    }\n\n    return target;\n}\n","//\n// core\n//\n\nimport init from './init';\nimport extend from './extend';\n\nexport default function Clus (selector) {\n    return new Clus.fn.init(selector);\n}\n\nClus.fn = Clus.prototype = {\n    contructor: Clus,\n    init,\n};\n\nClus.fn.init.prototype = Clus.fn;\n\nClus.extend = Clus.fn.extend = extend;\n\nwindow.Clus = window.C = window.$ = Clus;\n","//\n// global methods\n//\n\nexport function rootQuery(selector) {\n    return document.querySelectorAll(selector);\n}\n\nexport function trim(text) {\n    const rtrim = /^[\\s\\uFEFF\\xA0]+|[\\s\\uFEFF\\xA0]+$/g;\n    return text == null ? '' : `${text}`.replace(rtrim, '');\n}\n\nexport function type(object) {\n    let class2type = {},\n        type = class2type.toString.call(object),\n        typeString = 'Boolean Number String Function Array Date RegExp Object Error Symbol';\n\n    if (object == null) {\n        return object + '';\n    }\n\n    typeString.split(' ').forEach((type) => {\n        class2type[`[object ${type}]`] = type.toLowerCase();\n    });\n\n    return (\n        typeof object === 'object' ||\n        typeof object === 'function'\n        ?\n        class2type[type] || 'object'\n        :\n        typeof object\n    );\n}\n\nexport function isPlainObject(object) {\n    let proto,\n        ctor,\n        class2type = {},\n        toString = class2type.toString, // Object.prototype.toString\n        hasOwn = class2type.hasOwnProperty,\n        fnToString = hasOwn.toString, // Object.toString/Function.toString\n        ObjectFunctionString = fnToString.call( Object ); // 'function Object() { [native code] }'\n\n    if (!object || toString.call(object) !== '[object Object]') {\n        return false;\n    }\n\n    // According to the object created by `Object.create(null)` is no `prototype`\n    proto = Object.getPrototypeOf(object);\n    if (!proto) {\n        return true;\n    }\n\n    ctor = hasOwn.call(proto, 'constructor') && proto.constructor;\n    return typeof ctor === 'function' && fnToString.call( ctor ) === ObjectFunctionString;\n}\n\nexport function isWindow(object) {\n    return object !== null && object === object.window;\n}\n\nexport function isDocument(object) {\n    return object !== null && object.nodeType == object.DOCUMENT_NODE;\n}\n\nexport function isArrayLike(object) {\n    let len = !!object && 'length' in object && object.length,\n\t\ttype = Clus.type(object);\n\n\tif (type === 'function' || isWindow(object)) return false;\n\n\treturn type === 'array' || len === 0 || typeof length === 'number' && len > 0 && (len - 1) in object;\n}\n\nexport function flatten(array) {\n    let ret = [],\n        el,\n        i = 0,\n        len = array.length;\n\n    for (; i < len; i++) {\n        el = array[i];\n        if (Array.isArray(el)) {\n            ret.push.apply(ret, flatten(el));\n        } else {\n            ret.push(el);\n        }\n    }\n    return ret;\n}\n\nexport function map(items, callback) {\n    let value, values = [], len, i = 0;\n\n\tif (isArrayLike(items)) {\n\t\tlen = items.length;\n\t\tfor (; i < len; i++) {\n            value = callback(items[i], i);\n            if (value != null) values.push(value);\n\t\t}\n\t} else {\n\t\tfor (i in items) {\n            value = callback(items[i], i);\n            if (value != null) values.push(value);\n\t\t}\n\t}\n\n\treturn flatten(values);\n}\n\nexport function each(items, callback) {\n    let len, i = 0;\n\n\tif ( isArrayLike(items) ) {\n\t\tlen = items.length;\n\t\tfor ( ; i < len; i++ ) {\n\t\t\tif (callback.call(items[i], items[i], i) === false) return items;\n\t\t}\n\t} else {\n\t\tfor ( i in items ) {\n            if (callback.call(items[i], items[i], i) === false) return items;\n\t\t}\n\t}\n\n\treturn items;\n}\n\nexport function merge(first, second) {\n    let len = +second.length,\n\t\tj = 0,\n\t\ti = first.length;\n\n\tfor ( ; j < len; j++ ) {\n\t\tfirst[ i++ ] = second[ j ];\n\t}\n\n\tfirst.length = i;\n\n\treturn first;\n}\n\nexport function unique(array) {\n    let unique = [], i = 0, len = array.length;\n    for (; i < len; i++) {\n        if (unique.indexOf(array[i]) === -1) {\n            unique.push(array[i]);\n        }\n    }\n    return unique;\n}\n\nexport function matches(element, selector) {\n    if (!selector || !element || element.nodeType !== 1) return false;\n\n    let matchesSelector = element.matchesSelector || element.webkitMatchesSelector || element.mozMatchesSelector || element.msMatchesSelector;\n\n    return matchesSelector.call(element, selector);\n}\n\nexport function parseHTML(DOMString) {\n    let htmlDoc = document.implementation.createHTMLDocument();\n    htmlDoc.body.innerHTML = DOMString;\n    return htmlDoc.body.children;\n}\n\nClus.extend({\n    find: rootQuery,\n    type,\n    isPlainObject,\n    isWindow,\n    isDocument,\n    isArrayLike,\n    each,\n    map,\n    merge,\n    trim,\n    unique,\n    matches,\n    parseHTML,\n});\n","//\n// instance methods\n//\n\nfunction is(selector) {\n    return this.length > 0 && Clus.matches(this[0], selector);\n}\n\nfunction instanceMap(callback) {\n    return Clus(Clus.map(this, function(item, index) {\n        return callback.call(item, item, index);\n    }));\n}\n\nfunction instanceEach(callback) {\n    [].every.call(this, function(item, index) {\n        return callback.call(item, item, index) !== false;\n    });\n    return this;\n}\n\nClus.fn.extend({\n    is,\n    map: instanceMap,\n    each: instanceEach,\n});\n","//\n// event\n//\n\nexport function on(eventName, selector, handler, capture) {\n    let events = eventName.split(' '), i, j;\n\n    for (i = 0; i < this.length; i++) {\n        if (Clus.type(selector) === 'function' || selector === false) {\n            // Usual events\n            if (Clus.type(selector) === 'function') {\n                handler = arguments[1];\n                capture = arguments[2] || false;\n            }\n            for (j = 0; j < events.length; j++) {\n                // check for namespaces\n                if (events[j].indexOf('.') !== -1) {\n                    handleNamespaces(this[i], events[j], handler, capture);\n                } else {\n                    this[i].addEventListener(events[j], handler, capture);\n                }\n            }\n        } else {\n            // Live events\n            for (j = 0; j < events.length; j++) {\n                if (!this[i].DomLiveListeners) {\n                    this[i].DomLiveListeners = [];\n                }\n\n                this[i].DomLiveListeners.push({\n                    handler: handler,\n                    liveListener: handleLiveEvent,\n                });\n\n                if (events[j].indexOf('.') !== -1) {\n                    handleNamespaces(this[i], events[j], handleLiveEvent, capture);\n                } else {\n                    this[i].addEventListener(events[j], handleLiveEvent, capture);\n                }\n            }\n        }\n    }\n\n    function handleLiveEvent(event) {\n        let k,\n            parents,\n            target = event.target;\n\n        if (Clus(target).is(selector)) {\n            handler.call(target, event);\n        } else {\n            parents = Clus(target).parents();\n            for (k = 0; k < parents.length; k++) {\n                if (Clus(parents[k]).is(selector)) {\n                    handler.call(parents[k], event);\n                }\n            }\n        }\n    }\n\n    function handleNamespaces(elm, name, handler, capture) {\n        let namespace = name.split('.');\n\n        if (!elm.DomNameSpaces) {\n            elm.DomNameSpaces = [];\n        }\n\n        elm.DomNameSpaces.push({\n            namespace: namespace[1],\n            event: namespace[0],\n            handler: handler,\n            capture: capture,\n        });\n\n        elm.addEventListener(namespace[0], handler, capture);\n    }\n\n    return this;\n}\n\nexport function off(eventName, selector, handler, capture) {\n    let events,\n        i, j, k,\n        that = this;\n\n    events = eventName.split(' ');\n\n    for (i = 0; i < events.length; i++) {\n        for (j = 0; j < this.length; j++) {\n            if (Clus.type(selector) === 'function' || selector === false) {\n                // Usual events\n                if (Clus.type(selector) === 'function') {\n                    handler = arguments[1];\n                    capture = arguments[2] || false;\n                }\n\n                if (events[i].indexOf('.') === 0) { // remove namespace events\n                    removeEvents(events[i].substr(1), handler, capture);\n                } else {\n                    this[j].removeEventListener(events[i], handler, capture);\n                }\n            } else {\n                // Live event\n                if (this[j].DomLiveListeners) {\n                    for (k = 0; k < this[j].DomLiveListeners.length; k++) {\n                        if (this[j].DomLiveListeners[k].handler === handler) {\n                            this[j].removeEventListener(events[i], this[j].DomLiveListeners[k].liveListener, capture);\n                        }\n                    }\n                }\n                if (this[j].DomNameSpaces && this[j].DomNameSpaces.length && events[i]) {\n                    removeEvents(events[i]);\n                }\n            }\n        }\n    }\n\n    function removeEvents(event) {\n        let i, j,\n            item,\n            parts = event.split('.'),\n            name = parts[0],\n            ns = parts[1];\n\n        for (i = 0; i < that.length; ++i) {\n            if (that[i].DomNameSpaces) {\n                for (j = 0; j < that[i].DomNameSpaces.length; ++j) {\n                    item = that[i].DomNameSpaces[j];\n\n                    if (item.namespace == ns && (item.event == name || !name)) {\n                        that[i].removeEventListener(item.event, item.handler, item.capture);\n                        item.removed = true;\n                    }\n                }\n                // remove the events from the DomNameSpaces array\n                for (j = that[i].DomNameSpaces.length - 1; j >= 0; --j) {\n                    if (that[i].DomNameSpaces[j].removed) {\n                        that[i].DomNameSpaces.splice(j, 1);\n                    }\n                }\n            }\n        }\n    }\n\n    return this;\n}\n\nClus.fn.extend({\n    on,\n    off,\n});\n","//\n// dom search\n//\n\nfunction pushStack(els) {\n    let ret = Clus.merge(this.contructor(), els);\n    ret.prevObject = this;\n    return ret;\n}\n\nfunction find(selector) {\n    let i = 0,\n        el,\n        ret = this.pushStack([]);\n\n    while((el = this[i++])) {\n        ret = Clus.merge(ret, el.querySelectorAll(selector));\n    }\n\n    return ret;\n}\n\nfunction end() {\n    return this.prevObject || this.contructor();\n}\n\nfunction eq(i) {\n    let len = this.length,\n        j = +i + ( i < 0 ? len : 0 ); // reverse find\n    return this.pushStack(j >= 0 && j < len ? [this[j]] : []);\n}\n\nfunction first() {\n    return this.eq(0);\n}\n\nfunction last() {\n    return this.eq(-1);\n}\n\nfunction parent(selector) {\n    let parents = [], i = 0, len = this.length;\n    for (; i < len; i++) {\n        if (this[i].parentNode !== null) {\n            if (selector) {\n                if (Clus(this[i].parentNode).is(selector)) {\n                    parents.push(this[i].parentNode);\n                }\n            } else {\n                parents.push(this[i].parentNode);\n            }\n        }\n    }\n    parents = Clus.unique(parents);\n    return Clus(parents);\n}\n\nfunction parents(selector) {\n    let parent, parents = [], i = 0, len = this.length;\n    for (; i < len; i++) {\n        parent = this[i].parentNode;\n        while (parent) {\n            if (selector) {\n                if (Clus(parent).is(selector)) {\n                    parents.push(parent);\n                }\n            } else {\n                parents.push(parent);\n            }\n            parent = parent.parentNode;\n        }\n    }\n    parents = Clus.unique(parents);\n    return Clus(parents);\n}\n\nfunction children(selector) {\n    let children = [], childNodes, i = 0, j = 0, len = this.length;\n    for (; i < len; i++) {\n        childNodes = this[i].childNodes;\n        for (; j < childNodes.length; j++) {\n            if (!selector) {\n                if (childNodes[j].nodeType === 1) {\n                    children.push(childNodes[j]);\n                }\n            } else {\n                if (childNodes[j].nodeType === 1 && Clus(childNodes[j]).is(selector)) {\n                    children.push(childNodes[j]);\n                }\n            }\n        }\n    }\n\n    return Clus(Clus.unique(children));\n}\n\nClus.fn.extend({\n    pushStack,\n    find,\n    end,\n    eq,\n    first,\n    last,\n    parent,\n    parents,\n    children,\n});\n","//\n// dom\n//\n\nconst rnotwhite = /\\S+/g;\nconst rclass = /[\\t\\r\\n\\f]/g;\n\nexport function ready(callback) {\n    if (\n        document\n        &&\n        /complete|loaded|interactive/.test(document.readyState)\n        &&\n        document.body\n    ) {\n        callback();\n    } else {\n        document.addEventListener('DOMContentLoaded', function () {\n            callback();\n        }, false);\n    }\n\n    return this;\n}\n\nexport function getClass(el) {\n    return el.getAttribute && el.getAttribute('class') || '';\n}\n\nexport function addClass(cls) {\n    let classes, clazz, el, cur, curValue, finalValue, j, i = 0;\n\n    if (typeof cls === 'string' && cls) {\n        classes = cls.match(rnotwhite) || [];\n\n        while((el = this[i++])) {\n            curValue = getClass(el);\n            cur = (el.nodeType === 1) && ` ${curValue} `.replace(rclass, ' ');\n\n            if (cur) {\n                j = 0;\n\n                while((clazz = classes[j++])) {\n                    // to determine whether the class that to add has already existed\n                    if (cur.indexOf(` ${clazz} `) == -1) {\n                        cur += clazz + ' ';\n                    }\n                    finalValue = Clus.trim(cur);\n                    if ( curValue !== finalValue ) {\n                        el.setAttribute('class', finalValue);\n                    }\n                }\n            }\n        }\n    }\n\n    return this;\n}\n\nexport function removeClass(cls) {\n    let classes, clazz, el, cur, curValue, finalValue, j, i = 0;\n\n    if (!arguments.length) {\n        return;\n    }\n\n    if (typeof cls === 'string' && cls) {\n        classes = cls.match(rnotwhite) || [];\n\n        while((el = this[i++])) {\n            curValue = getClass(el);\n            cur = (el.nodeType === 1) && ` ${curValue} `.replace(rclass, ' ');\n\n            if (cur) {\n                j = 0;\n\n                while((clazz = classes[j++])) {\n                    // to determine whether the class that to add has already existed\n                    if (cur.indexOf(` ${clazz} `) !== -1) {\n                        cur = cur.replace(` ${clazz} `, ' ');\n                    }\n                    finalValue = Clus.trim(cur);\n                    if ( curValue !== finalValue ) {\n                        el.setAttribute('class', finalValue);\n                    }\n                }\n            }\n        }\n    }\n\n    return this;\n}\n\nexport function hasClass(cls) {\n    let el, i = 0, className = ` ${cls} `;\n\n    while((el = this[i++])) {\n        if (\n            el.nodeType === 1\n            &&\n            ` ${getClass(el)} `.replace(rclass, ' ').indexOf(className) !== -1\n        ) {\n            return true;\n        }\n    }\n\n    return false;\n}\n\nexport function toggleClass(cls) {\n    let el, i = 0;\n\n    while((el = this[i++])) {\n        if (this.hasClass(cls)) {\n            this.removeClass(cls);\n            return this;\n        } else {\n            this.addClass(cls);\n            return this;\n        }\n    }\n}\n\nexport function append(DOMString) {\n    let el, i = 0,\n        fregmentCollection = Clus.parseHTML(DOMString),\n        fregments = Array.prototype.slice.apply(fregmentCollection);\n\n    while((el = this[i++])) {\n        fregments.map(fregment => {\n            el.appendChild(fregment);\n        });\n    }\n\n    return this;\n}\n\nexport function appendTo(selector) {\n    let fregment, i = 0,\n        elCollection = Clus.find(selector),\n        els = Array.prototype.slice.apply(elCollection);\n\n    while((fregment = this[i++])) {\n        els.map(el => {\n            el.appendChild(fregment);\n        });\n    }\n}\n\nClus.fn.extend({\n    ready,\n    addClass,\n    removeClass,\n    hasClass,\n    toggleClass,\n    append,\n    appendTo,\n});\n"],"names":["init","selector","dom","fragmentRE","selectorType","Clus","type","elementTypes","indexOf","nodeType","window","document","ready","test","parseHTML","slice","call","querySelectorAll","extend","fn","options","name","clone","copy","source","copyIsArray","target","arguments","i","length","deep","this","isPlainObject","Array","isArray","undefined","rootQuery","trim","text","rtrim","replace","object","class2type","toString","typeString","split","forEach","toLowerCase","proto","ctor","hasOwnProperty","fnToString","hasOwn","Object","getPrototypeOf","constructor","ObjectFunctionString","isWindow","isDocument","DOCUMENT_NODE","isArrayLike","len","flatten","array","ret","el","push","apply","map","items","callback","value","values","each","merge","first","second","j","unique","matches","element","matchesSelector","webkitMatchesSelector","mozMatchesSelector","msMatchesSelector","DOMString","htmlDoc","implementation","createHTMLDocument","body","innerHTML","children","is","instanceMap","item","index","instanceEach","every","on","eventName","handler","capture","handleLiveEvent","event","k","parents","handleNamespaces","elm","namespace","DomNameSpaces","addEventListener","events","DomLiveListeners","off","removeEvents","parts","ns","that","removeEventListener","removed","splice","substr","liveListener","pushStack","els","contructor","prevObject","find","end","eq","last","parent","parentNode","childNodes","readyState","getClass","getAttribute","addClass","cls","classes","clazz","cur","curValue","finalValue","match","rnotwhite","rclass","setAttribute","removeClass","hasClass","className","toggleClass","append","fregmentCollection","fregments","prototype","appendChild","fregment","appendTo","elCollection","C","$"],"mappings":"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"}