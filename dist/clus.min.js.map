{"version":3,"file":null,"sources":["../src/core/utils.js","../src/core/init.js","../src/core/extend.js","../src/core/search.js","../src/core/dom/ready.js","../src/core/dom/append.js","../src/core/dom/class.js","../src/core/dom/parseHTML.js","../src/core/core.js"],"sourcesContent":["//\n// utils.js\n//\n\nexport function find(selector) {\n    return document.querySelectorAll(selector);\n}\n\nexport function trim(text) {\n    const rtrim = /^[\\s\\uFEFF\\xA0]+|[\\s\\uFEFF\\xA0]+$/g;\n    return text == null ? '' : `${text}`.replace(rtrim, '');\n}\n\nexport function type(object) {\n    let class2type = {},\n        type = class2type.toString.call(object),\n        typeString = 'Boolean Number String Function Array Date RegExp Object Error Symbol';\n\n    if (object == null) {\n        return object + '';\n    }\n\n    typeString.split(' ').forEach((type) => {\n        class2type[`[object ${type}]`] = type.toLowerCase();\n    });\n\n    return (\n        typeof object === 'object' ||\n        typeof object === 'function'\n        ?\n        class2type[type] || 'object'\n        :\n        typeof object\n    );\n}\n\nexport function isPlainObject(object) {\n    let proto,\n        ctor,\n        class2type = {},\n        toString = class2type.toString, // Object.prototype.toString\n        hasOwn = class2type.hasOwnProperty,\n        fnToString = hasOwn.toString, // Object.toString/Function.toString\n        ObjectFunctionString = fnToString.call( Object ); // 'function Object() { [native code] }'\n\n    if (!object || toString.call(object) !== '[object Object]') {\n        return false;\n    }\n\n    // According to the object created by `Object.create(null)` is no `prototype`\n    proto = Object.getPrototypeOf(object);\n    if (!proto) {\n        return true;\n    }\n\n    ctor = hasOwn.call(proto, 'constructor') && proto.constructor;\n    return typeof ctor === 'function' && fnToString.call( ctor ) === ObjectFunctionString;\n}\n\nexport function merge(first, second) {\n    let length = +second.length,\n\t\tj = 0,\n\t\ti = first.length;\n\n\tfor ( ; j < length; j++ ) {\n\t\tfirst[ i++ ] = second[ j ];\n\t}\n\n\tfirst.length = i;\n\n\treturn first;\n}\n","//\n// init.js\n//\n\nexport default function init(selector = '') {\n    let dom,\n        fragmentRE = /^\\s*<(\\w+|!)[^>]*>/,\n        selectorType = Clus.type(selector),\n        elementTypes = [1, 9, 11];\n\n    if (!selector) {\n        dom = [],\n        dom.selector = selector;\n    } else if (elementTypes.indexOf(selector.nodeType) !== -1 || selector === window) {\n        dom = [selector],\n        selector = null;\n    } else if (selectorType === 'function') {\n        return Clus(document).ready(selector);\n    } else if (selectorType === 'array') {\n        dom = selector;\n    } else if (selectorType === 'object') {\n        dom = [selector],\n        selector = null;\n    } else if (selectorType === 'string') {\n        if (selector[0] === '<' && fragmentRE.test(selector)) {\n            dom = Clus.parseHTML(selector),\n            selector = null;\n        } else {\n            dom = [].slice.call(document.querySelectorAll(selector));\n        }\n    }\n\n    dom = dom || [];\n    Clus.extend(dom, Clus.fn);\n    dom.selector = selector;\n\n    return dom;\n}\n","//\n// extend.js\n//\n\nimport { isPlainObject, type } from './utils.js';\n\nexport default function extend() {\n    let options, name, clone, copy, source, copyIsArray,\n        target = arguments[0] || {},\n        i = 1,\n        length = arguments.length,\n        deep = false;\n\n    if (typeof target === 'boolean') {\n        deep = target;\n        target = arguments[i] || {};\n        i++;\n    }\n\n    if (typeof target !== 'object' && type(target) !== 'function') {\n        target = {};\n    }\n\n    if (i === length) {\n        target = this;\n        i--;\n    }\n\n    for (; i < length; i++) {\n        //\n        if ((options = arguments[i]) !== null) {\n            // for in source object\n            for (name in options) {\n\n                source = target[name];\n                copy = options[name];\n\n                if (target == copy) {\n                    continue;\n                }\n\n                // deep clone\n                if (deep && copy && (isPlainObject(copy) || (copyIsArray = Array.isArray(copy)))) {\n                    // if copy is array\n                    if (copyIsArray) {\n                        copyIsArray = false;\n                        // if is not array, set it to array\n                        clone = source && Array.isArray(source) ? source : [];\n                    } else {\n                        // if copy is not a object, set it to object\n                        clone = source && isPlainObject(source) ? source : {};\n                    }\n\n                    target[name] = extend(deep, clone, copy);\n                } else if (copy !== undefined) {\n                    target[name] = copy;\n                }\n            }\n        }\n    }\n\n    return target;\n}\n","//\n// search.js\n//\n\nimport { merge } from './utils.js';\n\nfunction pushStack(els) {\n    let ret = merge(this.contructor(), els);\n    ret.prevObject = this;\n    return ret;\n}\n\nfunction find(selector) {\n    let i = 0,\n        el,\n        ret = this.pushStack([]);\n\n    while((el = this[i++])) {\n        ret = merge(ret, el.querySelectorAll(selector));\n    }\n\n    return ret;\n}\n\nfunction end() {\n    return this.prevObject || this.contructor();\n}\n\nfunction eq(i) {\n    let len = this.length,\n        j = +i + ( i < 0 ? len : 0 ); // reverse find\n    return this.pushStack(j >= 0 && j < len ? [this[j]] : []);\n}\n\nfunction first() {\n    return this.eq(0);\n}\n\nfunction last() {\n    return this.eq(-1);\n}\n\nexport default {\n    pushStack,\n    find,\n    end,\n    eq,\n    first,\n    last,\n};\n","//\n// ready.js\n//\n\nexport default function ready(callback) {\n    if (\n        document\n        &&\n        /complete|loaded|interactive/.test(document.readyState)\n        &&\n        document.body\n    ) {\n        callback();\n    } else {\n        document.addEventListener('DOMContentLoaded', function () {\n            callback();\n        }, false);\n    }\n\n    return this;\n}\n","//\n// append.js\n//\n\nexport function appendTo(selector) {\n    let fregment, i = 0,\n        elCollection = Clus.find(selector),\n        els = Array.prototype.slice.apply(elCollection);\n\n    while((fregment = this[i++])) {\n        console.log(fregment);\n        els.map(el => {\n            console.log(el);\n            el.appendChild(fregment);\n        });\n    }\n}\n\nexport function append(DOMString) {\n    let el, i = 0,\n        fregmentCollection = Clus.parseHTML(DOMString),\n        fregments = Array.prototype.slice.apply(fregmentCollection);\n\n    while((el = this[i++])) {\n        fregments.map(fregment => {\n            el.appendChild(fregment);\n        });\n    }\n\n    return this;\n}\n","//\n// classes.js\n//\n\nconst rnotwhite = /\\S+/g;\nconst rclass = /[\\t\\r\\n\\f]/g;\n\nexport function getClass(el) {\n    return el.getAttribute && el.getAttribute('class') || '';\n}\n\nexport function addClass(cls) {\n    let classes, clazz, el, cur, curValue, finalValue, j, i = 0;\n\n    if (typeof cls === 'string' && cls) {\n        classes = cls.match(rnotwhite) || [];\n\n        while((el = this[i++])) {\n            curValue = getClass(el);\n            cur = (el.nodeType === 1) && ` ${curValue} `.replace(rclass, ' ');\n\n            if (cur) {\n                j = 0;\n\n                while((clazz = classes[j++])) {\n                    // to determine whether the class that to add has already existed\n                    if (cur.indexOf(` ${clazz} `) == -1) {\n                        cur += clazz + ' ';\n                    }\n                    finalValue = Clus.trim(cur);\n                    if ( curValue !== finalValue ) {\n                        el.setAttribute('class', finalValue);\n                    }\n                }\n            }\n        }\n    }\n\n    return this;\n}\n\nexport function removeClass(cls) {\n    let classes, clazz, el, cur, curValue, finalValue, j, i = 0;\n\n    if (!arguments.length) {\n        return;\n    }\n\n    if (typeof cls === 'string' && cls) {\n        classes = cls.match(rnotwhite) || [];\n\n        while((el = this[i++])) {\n            curValue = getClass(el);\n            cur = (el.nodeType === 1) && ` ${curValue} `.replace(rclass, ' ');\n\n            if (cur) {\n                j = 0;\n\n                while((clazz = classes[j++])) {\n                    // to determine whether the class that to add has already existed\n                    if (cur.indexOf(` ${clazz} `) !== -1) {\n                        cur = cur.replace(` ${clazz} `, ' ');\n                    }\n                    finalValue = Clus.trim(cur);\n                    if ( curValue !== finalValue ) {\n                        el.setAttribute('class', finalValue);\n                    }\n                }\n            }\n        }\n    }\n\n    return this;\n}\n\nexport function hasClass(cls) {\n    let el, i = 0, className = ` ${cls} `;\n\n    while((el = this[i++])) {\n        if (\n            el.nodeType === 1\n            &&\n            ` ${getClass(el)} `.replace(rclass, ' ').indexOf(className) !== -1\n        ) {\n            return true;\n        }\n    }\n\n    return false;\n}\n\nexport function toggleClass(cls) {\n    let el, i = 0;\n\n    while((el = this[i++])) {\n        if (this.hasClass(cls)) {\n            this.removeClass(cls);\n            return this;\n        } else {\n            this.addClass(cls);\n            return this;\n        }\n    }\n}\n\nexport default {\n    addClass,\n    removeClass,\n    hasClass,\n    toggleClass,\n};\n","//\n// parseHTML\n//\n\nexport default function parseHTML(DOMString) {\n    let htmlDoc = document.implementation.createHTMLDocument();\n    htmlDoc.body.innerHTML = DOMString;\n    return htmlDoc.body.children;\n}\n","//\n// Core.js\n//\n\nimport { find, merge, trim, type } from './utils.js';\nimport init from './init.js';\nimport extend from './extend.js';\nimport search from './search.js';\nimport DOM from './dom/index.js';\nimport parseHTML from './dom/parseHTML.js';\n\nexport default function Clus (selector) {\n    return new Clus.fn.init(selector);\n};\n\nClus.fn = Clus.prototype = {\n    contructor: Clus,\n    init,\n};\n\nClus.fn.init.prototype = Clus.fn;\n\nClus.extend = Clus.fn.extend = extend;\n\n// ====================================\n// extend Clus methods\n// ====================================\n\nClus.extend({\n    find,\n    merge,\n    trim,\n    type,\n    parseHTML,\n});\n\n// ====================================\n// extend selector\n// ====================================\n\nClus.fn.extend(search);\n\n// ====================================\n// extend DOM methods\n// ====================================\nClus.fn.extend(DOM);\n\nwindow.Clus = window.C = window.$ = Clus;\n"],"names":["find","selector","document","querySelectorAll","trim","text","rtrim","replace","type","object","class2type","toString","call","typeString","split","forEach","toLowerCase","isPlainObject","proto","ctor","hasOwnProperty","fnToString","hasOwn","Object","getPrototypeOf","constructor","ObjectFunctionString","merge","first","second","length","j","i","init","dom","fragmentRE","selectorType","Clus","elementTypes","indexOf","nodeType","window","ready","test","parseHTML","slice","extend","fn","options","name","clone","copy","source","copyIsArray","target","arguments","deep","this","Array","isArray","undefined","pushStack","els","ret","contructor","prevObject","el","end","eq","len","last","callback","readyState","body","addEventListener","appendTo","fregment","elCollection","prototype","apply","log","map","appendChild","append","DOMString","fregmentCollection","fregments","getClass","getAttribute","addClass","cls","classes","clazz","cur","curValue","finalValue","match","rnotwhite","rclass","setAttribute","removeClass","hasClass","className","toggleClass","htmlDoc","implementation","createHTMLDocument","innerHTML","children","search","DOM","C","$"],"mappings":"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"}