{"version":3,"file":null,"sources":["../src/core/utils.js","../src/core/extend.js","../src/core/search.js","../src/core/dom.js","../src/core/core.js","../src/core/init.js","../src/index.js"],"sourcesContent":["//\n// utils.js\n//\n\nexport function find(selector) {\n    return document.querySelectorAll(selector);\n}\n\nexport function trim(text) {\n    const rtrim = /^[\\s\\uFEFF\\xA0]+|[\\s\\uFEFF\\xA0]+$/g;\n    return text == null ? '' : `${text}`.replace(rtrim, '');\n}\n\nexport function type(object) {\n    let class2type = {},\n        type = class2type.toString.call(object),\n        typeString = 'Boolean Number String Function Array Date RegExp Object Error Symbol';\n\n    if (object == null) {\n        return object + '';\n    }\n\n    typeString.split(' ').forEach((type) => {\n        class2type[`[object ${type}]`] = type.toLowerCase();\n    });\n\n    return (\n        typeof object === 'object' ||\n        typeof object === 'function'\n        ?\n        class2type[type] || 'object'\n        :\n        typeof object\n    );\n}\n\nexport function isPlainObject(object) {\n    let proto,\n        ctor,\n        class2type = {},\n        toString = class2type.toString, // Object.prototype.toString\n        hasOwn = class2type.hasOwnProperty,\n        fnToString = hasOwn.toString, // Object.toString/Function.toString\n        ObjectFunctionString = fnToString.call( Object ); // 'function Object() { [native code] }'\n\n    if (!object || toString.call(object) !== '[object Object]') {\n        return false;\n    }\n\n    // According to the object created by `Object.create(null)` is no `prototype`\n    proto = Object.getPrototypeOf(object);\n    if (!proto) {\n        return true;\n    }\n\n    ctor = hasOwn.call(proto, 'constructor') && proto.constructor;\n    return typeof ctor === 'function' && fnToString.call( ctor ) === ObjectFunctionString;\n}\n\nexport function merge(first, second) {\n    let length = +second.length,\n\t\tj = 0,\n\t\ti = first.length;\n\n\tfor ( ; j < length; j++ ) {\n\t\tfirst[ i++ ] = second[ j ];\n\t}\n\n\tfirst.length = i;\n\n\treturn first;\n}\n","//\n// extend.js\n//\n\nimport { isPlainObject, type } from './utils.js';\n\nexport default function extend() {\n    let options, name, clone, copy, source, copyIsArray,\n        target = arguments[0] || {},\n        i = 1,\n        length = arguments.length,\n        deep = false;\n\n    if (typeof target === 'boolean') {\n        deep = target;\n        target = arguments[i] || {};\n        i++;\n    }\n\n    if (typeof target !== 'object' && type(target) !== 'function') {\n        target = {};\n    }\n\n    if (i === length) {\n        target = this;\n        i--;\n    }\n\n    for (; i < length; i++) {\n        //\n        if ((options = arguments[i]) !== null) {\n            // for in source object\n            for (name in options) {\n\n                source = target[name];\n                copy = options[name];\n\n                if (target == copy) {\n                    continue;\n                }\n\n                // deep clone\n                if (deep && copy && (isPlainObject(copy) || (copyIsArray = Array.isArray(copy)))) {\n                    // if copy is array\n                    if (copyIsArray) {\n                        copyIsArray = false;\n                        // if is not array, set it to array\n                        clone = source && Array.isArray(source) ? source : [];\n                    } else {\n                        // if copy is not a object, set it to object\n                        clone = source && isPlainObject(source) ? source : {};\n                    }\n\n                    target[name] = extend(deep, clone, copy);\n                } else if (copy !== undefined) {\n                    target[name] = copy;\n                }\n            }\n        }\n    }\n\n    return target;\n}\n","//\n// search.js\n//\n\nimport { merge } from './utils.js';\n\nfunction pushStack(els) {\n    let ret = merge(this.contructor(), els);\n    ret.prevObject = this;\n    return ret;\n}\n\nfunction find(selector) {\n    let i = 0,\n        len = this.length,\n        self = this,\n        ret = this.pushStack([]);\n\n    for (; i < len; i++) {\n        Clus.find(selector, self[ i ], ret);\n    }\n\n    return ret;\n}\n\nfunction end() {\n    return this.prevObject || this.constructor();\n}\n\nfunction eq(i) {\n    let len = this.length,\n        j = +i + ( i < 0 ? len : 0 ); // reverse find\n    return this.pushStack(j >= 0 && j < len ? [this[j]] : []);\n}\n\nfunction first() {\n    return this.eq(0);\n}\n\nfunction last() {\n    return this.eq(-1);\n}\n\nexport default {\n    pushStack,\n    find,\n    end,\n    eq,\n    first,\n    last,\n}\n","//\n// classes.js\n//\n\nconst rnotwhite = /\\S+/g;\nconst rclass = /[\\t\\r\\n\\f]/g;\n\nfunction getClass(el) {\n    return el.getAttribute && el.getAttribute('class') || '';\n}\n\nfunction addClass(cls) {\n    let classes, clazz, el, cur, curValue, finalValue, j, i = 0;\n\n    if (typeof cls === 'string' && cls) {\n        classes = cls.match(rnotwhite) || [];\n\n        while((el = this[i++])) {\n            curValue = getClass(el);\n            cur = (el.nodeType === 1) && ` ${curValue} `.replace(rclass, ' ');\n\n            if (cur) {\n                j = 0;\n\n                while((clazz = classes[j++])) {\n                    // to determine whether the class that to add has already existed\n                    if (cur.indexOf(` ${clazz} `) == -1) {\n                        cur += clazz + ' ';\n                    }\n                    finalValue = Clus.trim(cur);\n                    if ( curValue !== finalValue ) {\n                        el.setAttribute('class', finalValue);\n                    }\n                }\n            }\n        }\n    }\n\n    return this;\n}\n\nfunction removeClass(cls) {\n    let classes, clazz, el, cur, curValue, finalValue, j, i = 0;\n\n    if (!arguments.length) {\n        return;\n    }\n\n    if (typeof cls === 'string' && cls) {\n        classes = cls.match(rnotwhite) || [];\n\n        while((el = this[i++])) {\n            curValue = getClass(el);\n            cur = (el.nodeType === 1) && ` ${curValue} `.replace(rclass, ' ');\n\n            if (cur) {\n                j = 0;\n\n                while((clazz = classes[j++])) {\n                    // to determine whether the class that to add has already existed\n                    if (cur.indexOf(` ${clazz} `) !== -1) {\n                        cur = cur.replace(` ${clazz} `, ' ');\n                    }\n                    finalValue = Clus.trim(cur);\n                    if ( curValue !== finalValue ) {\n                        el.setAttribute('class', finalValue);\n                    }\n                }\n            }\n        }\n    }\n\n    return this;\n}\n\nfunction hasClass(cls) {\n    let el, i = 0, className = ` ${cls} `;\n\n    while((el = this[i++])) {\n        if (\n            el.nodeType === 1\n            &&\n            ` ${getClass(el)} `.replace(rclass, ' ').indexOf(className) !== -1\n        ) {\n            return true;\n        }\n    }\n\n    return false;\n}\n\nfunction toggleClass(cls) {\n    let el, i = 0;\n\n    while((el = this[i++])) {\n        if (this.hasClass(cls)) {\n            this.removeClass(cls);\n            return this;\n        } else {\n            this.addClass(cls);\n            return this;\n        }\n    }\n}\n\nexport default {\n    addClass,\n    removeClass,\n    hasClass,\n    toggleClass,\n};\n","//\n// Core.js\n//\n\nimport extend from './extend.js';\nimport { find, merge, trim } from './utils.js';\nimport search from './search.js';\nimport DOM from './dom.js';\n\nexport default function Clus(selector, context) {\n    return new Clus.fn.init(selector, context);\n}\n\nClus.fn = Clus.prototype = {\n    contructor: Clus,\n    length: 0,\n};\n\nClus.extend = Clus.fn.extend = extend;\n\n// ====================================\n// extend Clus methods\n// ====================================\n\nClus.extend({\n    find,\n    merge,\n    trim,\n});\n\n// ====================================\n// extend selector\n// ====================================\n\nClus.fn.extend(search);\n\n// ====================================\n// extend DOM methods\n// ====================================\nClus.fn.extend(DOM);\n\nwindow.Clus = window.C = window.$ = Clus;\n","//\n// init.js\n//\n\nexport default function init(Clus) {\n    Clus.fn.init = function (selector, context, root) {\n        if (!selector) {\n            return;\n        } else if (selector === document) {\n            Clus.merge(this, [document]);\n            return this;\n        } else {\n            let els = Clus.find(selector);\n            if (els.length) {\n                Clus.merge(this, els);\n            }\n            return this;\n        }\n    };\n    Clus.fn.init.prototype = Clus.fn;\n}\n","// @flow\n\nimport Clus from './core/core.js';\nimport init from './core/init.js';\n\ninit(Clus);\n"],"names":["find","selector","document","querySelectorAll","trim","text","rtrim","replace","type","object","class2type","toString","call","typeString","split","forEach","toLowerCase","isPlainObject","proto","ctor","hasOwnProperty","fnToString","hasOwn","Object","getPrototypeOf","constructor","ObjectFunctionString","merge","first","second","length","j","i","extend","options","name","clone","copy","source","copyIsArray","target","arguments","deep","this","Array","isArray","undefined","pushStack","els","ret","contructor","prevObject","len","self","end","eq","last","getClass","el","getAttribute","addClass","cls","classes","clazz","cur","curValue","finalValue","match","rnotwhite","nodeType","rclass","indexOf","Clus","setAttribute","removeClass","hasClass","className","toggleClass","context","fn","init","root","prototype","search","DOM","window","C","$"],"mappings":"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"}